------------------------------Tablewidget set items ---------------------------------------------------------
    key_merge = []
    for _dict in data:
        key_merge += list(set(_dict.keys()) - set(key_merge))

    tablewidget.setColumnCount(len(key_merge))
    tablewidget.setHorizontalHeaderLabels(key_merge)

    # Row: 0, 1, 2...
    for i, dt in enumerate(data):
        tablewidget.insertRow(i)
        # TODO: bunu unutma
        for idx, key in enumerate(key_merge):

            insert_item = QTableWidgetItem()
            if isinstance(dt.get(key), dict):
                treewidget = QTreeWidget()
                treewidget.setHeaderHidden(True) # set in tablewidget
                # todo: dynamicly cell size
                init_treewidget(dt.get(key), treewidget, tablewidget, i, idx)

            else:
                insert_item.setText(str(dt.get(key)))
            tablewidget.setItem(i, idx, insert_item)
            tablewidget.setEditTriggers(QAbstractItemView.NoEditTriggers)

    tablewidget.cellClicked.connect(tablewidget_clicked)

    tablay.addWidget(tablewidget)

*------------------------ Treewidget sets -------------------------------------------------------------------------------

def init_treewidget(itr, treewidget: QTreeWidget, tablewidget: QTableWidget, i, idx):
    for a, k in enumerate(itr.keys()):
        item_top = QTreeWidgetItem(treewidget)
        treewidget.topLevelItem(a).setText(i, k)

        treewidget.topLevelItem(a).insertChild(i, QTreeWidgetItem())  # .setText(i, itr[k])
        treewidget.topLevelItem(a).child(i).setText(i, itr[k])

        tablewidget.horizontalHeader().setDefaultSectionSize(len(itr) * 75)
        tablewidget.verticalHeader().setDefaultSectionSize(50)
        tablewidget.setCellWidget(i, idx, treewidget)

----------------------- clicked ---------------------------------------------------------------------------

def tablewidget_clicked(item, i):
    print(item)
    print(i)
